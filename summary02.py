#자료형

#리스트 [ ] (list) : 자바의 컬렉션에서의 리스트와 동일 개념 (크기변경 가능) 단, 형태는 배열과 유사
#                    리스트내부에는 어떠한 타입도 저장할 수 있다.(어차피 객체형태로 저장되기 때문에)
from re import A


aa=[10,20,40] #리스트([])
movies=['트랜스포머', '국제시장', '명량']
bb=[10, 20, 'Hello', True]
cc=[10, 20, 'Hello', ['트랜스포머', '국제시장', '명량']]
dd=[] #비어있는 리스트

print(bb)


#리스트의 인덱싱과 슬라이싱
#리스트 인덱싱
print(aa[0])
aa[0]=50
print(aa[0])
print(aa[-1]+aa[1]) #인덱스의 값이 음수인 경우에는 뒤쪽부터 가리킴

bb=[10,20,30,['ab', 'bc', 'cd']]
print(bb[0])
print(bb[3])
print(bb[-1])
print(bb[-1][1])

cc=[10, 20, ['aa', 'bb', 'cc',['국제시장', '명량']]]
print(cc[-1][-1][-1])


#리스트 슬라이싱
ab=[1, 10, 100, 1000, 10000]
print(ab[:3])

ab=[1, 10, 100, 1000, ['aa', 'bb', 'cc'], 1000, 10000]
print(ab[2:5])
print(ab[4][1:])

#리스트 연산(+, *:반복)
aa=[10, 20, 30]
bb=[100, 200, 300]
print(aa+bb)
print(aa*2)

#리스트값 변경하기
aa[1] #리스트의 값은 변경 가능 (단, 문자열, 튜플의 값은 변경할 수 없음)
print(aa[1])

aa[2:]=['국제시장', '명량']
print(aa)

aa[1]=[30,50] #하나의 인덱스 값에 대입하면 해당 항목에 그대로 저장
print(aa) #[10, [30, 50], '국제시장', '명량']
aa[1:2]=[30,50] #슬라이싱 정보에 입력하면 하나의 항목이라도 연결하여 저장
print(aa) #[10, 30, 50, '국제시장', '명량']
aa[-1]=['a']
print(aa)

#리스트의 요소값 삭제
#1. 빈리스트[]를 대입하여 삭제
print(aa) #[10, 30, 50, '국제시장', ['a']]
aa[2:5]=[] #빈공간을 대입하여 요소 삭제 가능 
print(aa)

#2. del 키워드를 이용하여 삭제 (파이썬 내장 기능) : del은 모든 자료형을 지우는데 사용됨
del aa[0]
print(aa)

a=3
#del a #일반 숫자형도 메모리에서 삭제됨
print(a)

